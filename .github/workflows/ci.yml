name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyqt5-stubs
          pip install pyright pytest pytest-cov

      - name: Type check with pyright
        run: |
          pyright
        continue-on-error: true

      - name: Lint with pyright (strict mode)
        run: |
          pyright --warnings
        continue-on-error: true

      - name: Test with pytest
        run: |
          pytest tests/ --cov=app --cov-report=xml --cov-report=term
        continue-on-error: true
        if: always()

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy
          pip install -r requirements.txt
          pip install pyqt5-stubs

      - name: Format check with black
        run: |
          black --check app/ main.py
        continue-on-error: true

      - name: Import sort check with isort
        run: |
          isort --check-only app/ main.py
        continue-on-error: true

      - name: Lint with flake8
        run: |
          flake8 app/ main.py --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ main.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true

      - name: Type check with mypy
        run: |
          mypy app/ main.py --ignore-missing-imports
        continue-on-error: true

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Security check with bandit
        run: |
          bandit -r app/ -ll
        continue-on-error: true

      - name: Check dependencies with safety
        run: |
          pip install -r requirements.txt
          safety check --json
        continue-on-error: true
